services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    ports:
      - "9092:9092"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: fraud_detection
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./infrastructure/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  stream-processor:
    build:
      context: ./stream-processor
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - redis
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: transactions
      CHECKPOINT_DIR: /tmp/spark-checkpoints
      APP_ROOT: /app
      DATABASE_URL: postgresql://postgres:password@postgres/fraud_detection
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_ALERT_CHANNEL: fraud_alerts
    volumes:
      - ./src:/app/src:ro
      - ./artifacts:/app/artifacts
    restart: unless-stopped
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - redis
      - postgres
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: transactions
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DATABASE_URL: postgresql://postgres:password@postgres/fraud_detection
      APP_ROOT: /app
    volumes:
      - ./src:/app/src:ro
      - ./artifacts:/app/artifacts
      - ./backend/app:/app/app:ro
    ports:
      - "8000:8000"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
    depends_on:
      - api
    ports:
      - "3000:80"
    restart: unless-stopped
